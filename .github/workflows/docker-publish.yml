name: docker

on:
  push:
    tags:
      - "v*.*.*"
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch: {}
  workflow_call:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  container:
    runs-on: ubuntu-20.04
    permissions:
      id-token: write
      packages: write
      contents: read
    timeout-minutes: 360
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Docker BuildX
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/amd64,linux/arm64
          version: latest
          buildkitd-flags: --debug

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lowercase image name
        run: echo LOWERCASE_IMAGE_NAME=$(echo ${{ github.repository }} | tr 'A-Z' 'a-z') >> $GITHUB_ENV

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.LOWERCASE_IMAGE_NAME }}

      - name: Finalize Docker Metadata
        id: docker_tagging
        run: |
            if [[ "${{ github.event_name }}" == 'schedule' ]]; then
              echo "cron trigger, assigning nightly tag"
              echo "docker_tags=${{ env.REGISTRY }}/${{ env.LOWERCASE_IMAGE_NAME }}:nightly,${{ env.REGISTRY }}/${{ env.LOWERCASE_IMAGE_NAME }}:nightly-${GITHUB_SHA}" >> $GITHUB_OUTPUT
            elif [[ "${GITHUB_REF##*/}" == "main" ]] || [[ ${GITHUB_REF##*/} == "master" ]]; then
              echo "manual trigger from master/main branch, assigning latest tag"
              echo "docker_tags=${{ env.REGISTRY }}/${{ env.LOWERCASE_IMAGE_NAME }}:${GITHUB_REF##*/},${{ env.REGISTRY }}/${{ env.LOWERCASE_IMAGE_NAME }}:latest" >> $GITHUB_OUTPUT
            else
              echo "Neither scheduled nor manual release from main branch. Just tagging as branch name"
              echo "docker_tags=${{ env.REGISTRY }}/${{ env.LOWERCASE_IMAGE_NAME }}:${GITHUB_REF##*/}" >> $GITHUB_OUTPUT
            fi

      - name: Inspect Docker Metadata
        run: |
          echo "TAGS -> ${{ steps.docker_tagging.outputs.docker_tags }}"
          echo "LABELS ->  ${{ steps.meta.outputs.labels }}"

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.docker_tagging.outputs.docker_tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          # cache-from: type=gha
          # cache-to: type=gha,mode=max
          build-args: |
            BUILDTIME=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            REVISION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
